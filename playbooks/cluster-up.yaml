- hosts: localhost 
  gather_facts: False

  tasks:
  - name: "Checking ssh-agent is running and '{{ ssh_key }}' key is loaded"
    shell: "ssh-add -l | grep {{ ssh_key | quote }}"

  - name: spin up instances
    ec2:
      key_name: "{{ ssh_key }}"
      group_id: "{{ sec_group_id }}" 
      ec2_region: "{{ region  }}" 
      ec2_zone: "{{ zone }}"
      instance_type: "{{ machine_type }}"
      vpc_subnet_id: "{{ subnet_id }}"
      image: "{{ ami_id }}"
      wait: true
      exact_count: "{{ num_nodes }}" 
      count_tag:
        Name: "{{ tag_name }}"
      instance_tags:
        Name: "{{ tag_name }}"
    register: ec2

  - add_host:
      hostname: "{{ item.public_dns_name }}"
      public_ip: "{{ item.public_ip }}"
      private_dns_name: "{{ item.private_dns_name  }}"
      private_ip: "{{ item.private_ip }}"
      groups: ec2hosts
    loop: "{{ ec2.instances }}"

- hosts: ec2hosts
  name: wait for ssh to come up
  remote_user: "{{ ssh_login }}"
  gather_facts: false
  
  tasks:
  - wait_for_connection:
      delay: 20
      timeout: 120 

# Everything after this can be modified to our needs. 
- hosts: ec2hosts
  name: configuration
  remote_user:  "{{ ssh_login }}"
  gather_facts: True
  become: yes

  tasks:
  - name: check docker service
    service: name=docker state=started

  - name: copy ocp anible inventory template
    copy:
      src: "{{ src_ocp_inventory_file }}" 
      dest: "{{ dest_ocp_inventory_file }}"
      owner: root
      group: root
      mode: 0644

  - name: configure inventory
    replace:
      path: "{{ dest_ocp_inventory_file }}"
      regexp: '(PRIVATE_DNS_NAME)'
      replace: "{{ hostvars[inventory_hostname].private_dns_name }}"
